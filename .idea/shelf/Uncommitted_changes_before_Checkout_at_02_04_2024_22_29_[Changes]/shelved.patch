Index: src/test/java/integration/user/AdminApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package integration.user;\r\n\r\nimport integration.ApiBase;\r\nimport io.qameta.allure.Step;\r\nimport io.restassured.path.json.JsonPath;\r\nimport io.restassured.response.Response;\r\n\r\nimport java.util.LinkedHashMap;\r\n\r\npublic class AdminApi extends ApiBase {\r\n    Response response;\r\n\r\n    public AdminApi() {\r\n\r\n    }\r\n\r\n    @Step(\"User Login via api: {email},{password}\")\r\n    public Tokens userLogin(String email, String password, int code) {\r\n        String endpoint = \"/api/auth/login\";\r\n        LinkedHashMap<String, String> body = new LinkedHashMap<>();\r\n        body.put(\"email\", email);\r\n        body.put(\"password\", password);\r\n        response = postRequest(endpoint, code, body);\r\n\r\n        // Проверяем успешность запроса\r\n        if (response.getStatusCode() == 200) {\r\n            String accessToken = response.jsonPath().getString(\"accessToken\");\r\n            String refreshToken = response.jsonPath().getString(\"refreshToken\");\r\n            long expiration = response.jsonPath().getLong(\"expiration\");\r\n            System.out.println(\"Access Token: \" + accessToken);\r\n            System.out.println(\"Refresh Token: \" + refreshToken);\r\n            System.out.println(\"Expiration: \" + expiration);\r\n\r\n        }\r\n        return (Tokens) response;\r\n    }\r\n\r\n    @Step(\"New Admin Registration : {email},{password},{confirmPassword},{role}\")\r\n    public String newAdminRegistration(String email, String password, String confirmPassword, String role, int code) {\r\n        String endpoint = \"/api/auth/register\";\r\n        LinkedHashMap<String, String> body = new LinkedHashMap<>();\r\n        body.put(\"email\", email);\r\n        body.put(\"password\", password);\r\n        body.put(\"confirmPassword\", confirmPassword);\r\n        body.put(\"role\", role);\r\n        response = postRequest(endpoint, code, body);\r\n        return response.asString();\r\n    }\r\n\r\n    @Step(\"Refresh Access Token via api: {refreshToken}\")\r\n    public String refreshAccessToken(String refreshToken, int code) {\r\n        String endpoint = \"/api/auth/refresh\";\r\n        LinkedHashMap<String, String> body = new LinkedHashMap<>();\r\n        body.put(\"refreshToken\", refreshToken);\r\n        response = postRequest(endpoint, code, body);\r\n        return response.asString();\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/test/java/integration/user/AdminApi.java b/src/test/java/integration/user/AdminApi.java
--- a/src/test/java/integration/user/AdminApi.java	
+++ b/src/test/java/integration/user/AdminApi.java	
@@ -2,7 +2,6 @@
 
 import integration.ApiBase;
 import io.qameta.allure.Step;
-import io.restassured.path.json.JsonPath;
 import io.restassured.response.Response;
 
 import java.util.LinkedHashMap;
@@ -15,7 +14,7 @@
     }
 
     @Step("User Login via api: {email},{password}")
-    public Tokens userLogin(String email, String password, int code) {
+    public Response userLogin(String email, String password, int code) {
         String endpoint = "/api/auth/login";
         LinkedHashMap<String, String> body = new LinkedHashMap<>();
         body.put("email", email);
@@ -32,7 +31,7 @@
             System.out.println("Expiration: " + expiration);
 
         }
-        return (Tokens) response;
+        return  response;
     }
 
     @Step("New Admin Registration : {email},{password},{confirmPassword},{role}")

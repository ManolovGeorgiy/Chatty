Index: src/test/java/integration/tests/login/LoginApiTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package integration.tests.login;\r\n\r\n\r\nimport integration.pages.user.UserApi;\r\nimport integration.pages.user.UserInfo;\r\nimport io.qameta.allure.*;\r\nimport io.restassured.path.json.JsonPath;\r\nimport org.testng.annotations.Test;\r\n\r\npublic class LoginApiTest {\r\n\r\n    UserApi userApi;\r\n    UserInfo userInfo;\r\n\r\n    @Test\r\n    public void userCanLogin() {\r\n        String email = \"g.power@gmail.com\";\r\n        String password = \"GPower3333\";\r\n\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(email, password, 200);\r\n        userInfo = new UserInfo(token);\r\n        String userJson = userInfo.getUser();\r\n        JsonPath object = new JsonPath(userJson);\r\n        String userId = object.getString(\"id\");\r\n        System.out.println(userId);\r\n\r\n\r\n    }\r\n\r\n    @Feature(value= \"User login\")\r\n    @Story(value = \"User can login with role user\")\r\n    @Description(value = \"User can not login\")\r\n    @Severity(SeverityLevel.BLOCKER)\r\n    @Test(description = \"User can not login wit invalid email\")\r\n    public void userCanNotLoginWitInvalidEmail() {\r\n        String email = \"gpower@gmail.com\";\r\n        String password = \"GPower3333\";\r\n\r\n        userApi = new UserApi();\r\n        userApi.login(email, password, 200);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/integration/tests/login/LoginApiTest.java b/src/test/java/integration/tests/login/LoginApiTest.java
--- a/src/test/java/integration/tests/login/LoginApiTest.java	
+++ b/src/test/java/integration/tests/login/LoginApiTest.java	
@@ -17,7 +17,6 @@
         String email = "g.power@gmail.com";
         String password = "GPower3333";
 
-
         userApi = new UserApi();
         String token = userApi.login(email, password, 200);
         userInfo = new UserInfo(token);
@@ -25,10 +24,7 @@
         JsonPath object = new JsonPath(userJson);
         String userId = object.getString("id");
         System.out.println(userId);
-
-
     }
-
     @Feature(value= "User login")
     @Story(value = "User can login with role user")
     @Description(value = "User can not login")
Index: src/test/java/integration/pages/user/UserInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package integration.pages.user;\r\n\r\nimport integration.ApiBase;\r\nimport io.restassured.path.json.JsonPath;\r\nimport io.restassured.response.Response;\r\n\r\npublic class UserInfo extends ApiBase {\r\n\r\n    public UserInfo(String token) {\r\n        super(token);\r\n    }\r\n\r\n    Response response;\r\n    public String getUser(){\r\n        String endpoint = \"/api/me\";\r\n        response = getRequest(endpoint, 200);\r\n        switch (response.getStatusCode()) {\r\n            case 200:\r\n                JsonPath jsonPath = response.jsonPath();\r\n                assert jsonPath.getString(\"id\") != null : \"ID is missing\";\r\n                assert jsonPath.getString(\"email\") != null : \"Name is missing\";\r\n                assert jsonPath.getString(\"role\") != null : \"Surname is missing\";\r\n                break;\r\n            case 400:\r\n                System.err.println(\"Bad Request: \" + response.asString());\r\n                break;\r\n            case 401:\r\n                System.err.println(\"Unauthorized: \" + response.asString());\r\n                break;\r\n            default:\r\n                System.err.println(\"Unexpected status code: \" + response.getStatusCode() + \" Response Body: \" + response.asString());\r\n        }\r\n        return response.asString();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/integration/pages/user/UserInfo.java b/src/test/java/integration/pages/user/UserInfo.java
--- a/src/test/java/integration/pages/user/UserInfo.java	
+++ b/src/test/java/integration/pages/user/UserInfo.java	
@@ -3,7 +3,6 @@
 import integration.ApiBase;
 import io.restassured.path.json.JsonPath;
 import io.restassured.response.Response;
-
 public class UserInfo extends ApiBase {
 
     public UserInfo(String token) {
Index: src/test/java/e2e/tests/post/AdminCanCreateEditAndDeletePostTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package e2e.tests.post;\r\n\r\nimport com.github.javafaker.Faker;\r\n\r\nimport e2e.TestBase;\r\nimport e2e.pages.Header;\r\nimport e2e.pages.adminPanel.AdminPanelPage;\r\nimport e2e.pages.homeBlog.HomeBlogPage;\r\nimport e2e.pages.login.LoginPage;\r\nimport e2e.pages.post.CreateAPostForm;\r\nimport e2e.pages.post.EditAPostForm;\r\nimport e2e.pages.post.EditPostPage;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\n\r\nimport java.io.File;\r\n\r\npublic class AdminCanCreateEditAndDeletePostTest extends TestBase {\r\n\r\n    Faker faker = new Faker();\r\n    File file = new File(\"src/test/java/resource/path\");\r\n\r\n    LoginPage loginPage;\r\n    AdminPanelPage adminPanelPage;\r\n    HomeBlogPage homeBlogPage;\r\n    CreateAPostForm createAPostForm;\r\n    Header header;\r\n    EditPostPage editPostPage;\r\n    EditAPostForm editAPostForm;\r\n    private void checkPostData(CreateAPostForm page, String title, String description, String content) {\r\n        String actualTitle = page.getTitle();\r\n        String actualDescription = page.getDescriptionText();\r\n        String actualContent = page.getContent();\r\n        Assert.assertEquals(actualTitle, title, actualTitle + \" is not equal \" + title);\r\n        Assert.assertEquals(actualDescription, description, actualDescription + \" is not equal \" + description);\r\n        Assert.assertEquals(actualContent, content, actualContent + \" is not equal \" + content);\r\n    }\r\n    private void checkEditPostData(EditAPostForm page, String editTitle, String editDescription, String editContent) {\r\n        String actualTitle = page.getEditTitle();\r\n        String actualDescription = page.getEditDescriptionText();\r\n        String actualContent = page.getEditContent();\r\n        Assert.assertEquals(actualTitle, editTitle, actualTitle + \" is not equal \" + editTitle);\r\n        Assert.assertEquals(actualDescription, editDescription, actualDescription + \" is not equal \" + editDescription);\r\n        Assert.assertEquals(actualContent, editContent, actualContent + \" is not equal \" + editContent);\r\n    }\r\n    @Test\r\n    public void adminCanCreateAPost() {\r\n        String email = \"g.power@gmail.com\";\r\n        String password = \"GPower3333\";\r\n        String title = faker.lorem().sentence(1);\r\n        String description = faker.lorem().sentence(1);\r\n        String content = faker.lorem().sentence(50);\r\n        String imagePath = \"src/test/java/resources/AdminCanCreatePost.jpg\";\r\n\r\n        String editTitle = \"IT\";\r\n        String editDescription = \"QA Engineer\";\r\n        String editContent = \"HALLO WORLD\";\r\n        String editImagePath = \"src/test/java/resources/adminCanEditAPost_IT.jpg\";\r\n\r\n        loginPage = new LoginPage(app.driver);\r\n        loginPage.waitForLoading();\r\n        loginPage.login(email, password);\r\n\r\n        adminPanelPage = new AdminPanelPage(app.driver);\r\n        adminPanelPage.waitForLoading();\r\n\r\n        header = new Header(app.driver);\r\n        header.clickHome();\r\n        header.createAPostClick();\r\n        createAPostForm = new CreateAPostForm(app.driver);\r\n        createAPostForm.userCanCreateAPost(title, description, content,imagePath);\r\n        createAPostForm.waitForLoading();\r\n        //createAPostForm.tumblerSwitchClick();\r\n        createAPostForm.imageLoading(imagePath);\r\n        createAPostForm.waitForLoading();\r\n\r\n        checkPostData(createAPostForm, title,description,content);\r\n        createAPostForm.clickSubmitButton();\r\n        createAPostForm.waitForLoading();\r\n\r\n        header = new Header(app.driver);\r\n        header.clickHome();\r\n        header.myPostClick();\r\n        header.waitForLoading();\r\n        header.setMyPostTab();\r\n\r\n        editPostPage = new EditPostPage(app.driver);\r\n        editPostPage.waitForLoading();\r\n        editPostPage.editPostButtonClick();\r\n        editPostPage.waitForLoading();\r\n\r\n        editAPostForm = new EditAPostForm(app.driver);\r\n        editAPostForm.waitForLoading();\r\n        editAPostForm.imageLoading(editImagePath);\r\n        editAPostForm.editPost(editTitle,editDescription,editContent);\r\n        checkEditPostData(editAPostForm,editTitle,editDescription,editContent);\r\n        editAPostForm.clickEditSubmitButton();\r\n\r\n        editPostPage = new EditPostPage(app.driver);\r\n        editPostPage.waitForLoading();\r\n        editPostPage.deletePostButtonClick();\r\n\r\n        homeBlogPage = new HomeBlogPage(app.driver);\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/e2e/tests/post/AdminCanCreateEditAndDeletePostTest.java b/src/test/java/e2e/tests/post/AdminCanCreateEditAndDeletePostTest.java
--- a/src/test/java/e2e/tests/post/AdminCanCreateEditAndDeletePostTest.java	
+++ b/src/test/java/e2e/tests/post/AdminCanCreateEditAndDeletePostTest.java	
@@ -55,7 +55,7 @@
         String editTitle = "IT";
         String editDescription = "QA Engineer";
         String editContent = "HALLO WORLD";
-        String editImagePath = "src/test/java/resources/adminCanEditAPost_IT.jpg";
+        String editImagePath = "src/test/java/resources/adminCanCreateAPost_edit.jpg";
 
         loginPage = new LoginPage(app.driver);
         loginPage.waitForLoading();
@@ -101,9 +101,5 @@
         editPostPage.deletePostButtonClick();
 
         homeBlogPage = new HomeBlogPage(app.driver);
-
-
-
     }
-
 }

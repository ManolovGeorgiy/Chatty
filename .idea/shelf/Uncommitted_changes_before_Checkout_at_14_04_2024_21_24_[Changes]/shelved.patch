Index: src/test/java/integration/tests/edituser/EditUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package integration.tests.edituser;\r\n\r\nimport com.fasterxml.jackson.core.type.TypeReference;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport config.Config;\r\nimport integration.pages.user.UserApi;\r\n\r\nimport io.restassured.RestAssured;\r\nimport io.restassured.builder.RequestSpecBuilder;\r\nimport io.restassured.http.ContentType;\r\nimport io.restassured.response.Response;\r\nimport io.restassured.specification.RequestSpecification;\r\nimport org.testng.annotations.Test;\r\nimport util.UserInfoDto;\r\n\r\nimport java.util.List;\r\nimport java.util.Random;\r\nimport java.util.UUID;\r\n\r\nimport static org.testng.Assert.assertEquals;\r\nimport static org.testng.AssertJUnit.assertNotNull;\r\n\r\npublic class EditUser {\r\n\r\n    private final Config config = new Config();\r\n    protected final String BASE_URL = config.getProjectApiUrl();\r\n    protected final RequestSpecification spec = new RequestSpecBuilder()\r\n            .setBaseUri(BASE_URL)\r\n            .setContentType(ContentType.JSON)\r\n            .build();\r\n    UserApi userApi;\r\n\r\n    @Test\r\n    public void userCanLogin() {\r\n\r\n        String email = generateRandomEmail();\r\n        String password = \"Boba9876\";\r\n        String confirmPassword = \"Boba9876\";\r\n        String role = \"user\";\r\n\r\n        userApi = new UserApi();\r\n        userApi.registration(email, password, confirmPassword, role, 201);\r\n\r\n        String emailLogin = \"Boba1234@mail.ru\";\r\n        String passwordLogin = \"Boba1234\";\r\n        String editUserEndpoint = \"/api/users\";\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(emailLogin, passwordLogin, 200);\r\n\r\n\r\n        UserInfoDto userInfo = getUserByEmail(token,email,200).get(0);\r\n        userInfo.setName(\"testName\");\r\n        userInfo.setSurname(\"testSurname\");\r\n        userInfo.setPhone(\"+1234567890\");\r\n        userInfo.setGender(\"MALE\");\r\n\r\n        UserInfoDto userInfoResponse = RestAssured.given()\r\n                .spec(spec)\r\n                .header(\"Authorization\", \"Bearer \" + token)\r\n                .when()\r\n                .body(userInfo)\r\n                .log().all()\r\n                .put(editUserEndpoint + \"/\" + userInfo.getId())\r\n                .then().log().all()\r\n                .extract().as(UserInfoDto.class);\r\n\r\n        assertNotNull(userInfoResponse);\r\n        assertEquals(\"testName\", userInfo.getName());\r\n        assertEquals(\"testSurname\", userInfo.getSurname());\r\n        assertEquals(\"+1234567890\", userInfo.getPhone());\r\n        assertEquals(\"MALE\", userInfo.getGender());\r\n    }\r\n\r\n\r\n    public List<UserInfoDto> getUserByEmail(String token, String email, int expectedStatusCode) {\r\n        String endpoint = \"/api/users\";\r\n\r\n        Response response = RestAssured.given()\r\n                .spec(spec)\r\n                .queryParam(\"email\", email)\r\n                .queryParam(\"limit\", 10)\r\n                .header(\"Authorization\", \"Bearer \" + token)\r\n                .when()\r\n                .log().all()\r\n                .get(endpoint)\r\n                .then()\r\n                .log().all()\r\n                .statusCode(expectedStatusCode)\r\n                .extract().response();\r\n\r\n        ObjectMapper objectMapper = new ObjectMapper();\r\n        List<UserInfoDto> userInfoList = objectMapper.convertValue(response.jsonPath().getList(\"\"), new TypeReference<List<UserInfoDto>>() {});\r\n\r\n        return userInfoList;\r\n    }\r\n    public  String generateRandomEmail() {\r\n        String baseEmail = \"example\"; // Base email address\r\n        String domain = \"example.com\"; // Domain name\r\n        Random random = new Random();\r\n\r\n        // Generate a random integer\r\n        int randomNumber = random.nextInt(Integer.MAX_VALUE);\r\n\r\n        // Concatenate the base email, random UUID, and domain\r\n        String randomEmail = baseEmail + randomNumber + \"@\" + domain;\r\n\r\n        return randomEmail;\r\n    }\r\n}
===================================================================
diff --git a/src/test/java/integration/tests/edituser/EditUser.java b/src/test/java/integration/tests/edituser/EditUser.java
--- a/src/test/java/integration/tests/edituser/EditUser.java	
+++ b/src/test/java/integration/tests/edituser/EditUser.java	
@@ -47,7 +47,7 @@
 
         userApi = new UserApi();
         String token = userApi.login(emailLogin, passwordLogin, 200);
-
+        
 
         UserInfoDto userInfo = getUserByEmail(token,email,200).get(0);
         userInfo.setName("testName");

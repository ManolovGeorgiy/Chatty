Index: src/test/java/integration/tests/contactUs/ContactUsApiTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package integration.tests.contactUs;\r\n\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport integration.ApiBase;\r\nimport integration.pages.contactUs.ContactUsApi;\r\nimport integration.pages.user.UserApi;\r\nimport integration.schemas.FeedbackReq;\r\nimport io.qameta.allure.*;\r\nimport io.restassured.RestAssured;\r\nimport io.restassured.http.ContentType;\r\nimport io.restassured.response.Response;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport util.UserInfoDto;\r\n\r\nimport static io.restassured.RestAssured.baseURI;\r\nimport static org.testng.AssertJUnit.assertNotNull;\r\n\r\npublic class ContactUsApiTest extends ApiBase {\r\n    UserApi userApi;\r\n    FeedbackReq feedbackReq;\r\n    ContactUsApi contactUsApi;\r\n\r\n    @Feature(value = \"User can send feedback\")\r\n    @Story(value = \"User can send feedback with valid values\")\r\n    @Description(value = \"User can send feedback with valid values\")\r\n    @Severity(SeverityLevel.BLOCKER)\r\n    @Test(description = \"User can send feedback\")\r\n    public void userCanSendMessageFeedbackViaApi() throws JsonProcessingException {\r\n        String newUserEmail = \"wWw1s1trieng12324@gmail.com\";\r\n        String password = \"Manowar33246\";\r\n\r\n        String name = \"Nata\";\r\n        String email = \"wWw1s1trieng12324@gmail.com\";\r\n        String content = \"Sdsdf sdfg dfgh dfgh f sdfgh\";\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(newUserEmail, password, 200);\r\n\r\n        feedbackReq = new FeedbackReq();\r\n        feedbackReq.setName(name);\r\n        feedbackReq.setEmail(email);\r\n        feedbackReq.setContent(content);\r\n\r\n        contactUsApi = new ContactUsApi(token);\r\n        contactUsApi.setDataToTheFeedback(feedbackReq, 201);\r\n\r\n        Assert.assertEquals(\"Nata\", feedbackReq.getName());\r\n        Assert.assertEquals(\"wWw1s1trieng12324@gmail.com\", feedbackReq.getEmail());\r\n        Assert.assertEquals(\"Sdsdf sdfg dfgh dfgh f sdfgh\", feedbackReq.getContent());\r\n    }\r\n\r\n    @Feature(value = \"User can not send feedback with invalid email\")\r\n    @Story(value = \"User can not send feedback with invalid email\")\r\n    @Description(value = \"User can not send feedback with invalid email\")\r\n    @Severity(SeverityLevel.BLOCKER)\r\n    @Test(description = \"User can not send feedback with invalid email\")\r\n    public void userCanNotSendFeedbackWithInvalidEmail() throws JsonProcessingException {\r\n        String newUserEmail = \"wWw1s1trieng12324@gmail.com\";\r\n        String password = \"Manowar33246\";\r\n\r\n        String name = \"Nata\";\r\n        String email = \"wWw1s1trieng12324gmail.com\";\r\n        String content = \"Sdsdf sdfg dfgh dfgh f sdfgh\";\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(newUserEmail, password, 200);\r\n\r\n        feedbackReq = new FeedbackReq();\r\n        feedbackReq.setName(name);\r\n        feedbackReq.setEmail(email);\r\n        feedbackReq.setContent(content);\r\n\r\n        contactUsApi = new ContactUsApi(token);\r\n        contactUsApi.setDataToTheFeedback(feedbackReq, 400);\r\n    }\r\n\r\n    @Feature(value = \"User can not send feedback\")\r\n    @Story(value = \"User can not send feedback without name\")\r\n    @Description(value = \"User can not send feedback without name\")\r\n    @Severity(SeverityLevel.BLOCKER)\r\n    @Test(description = \"User can not send feedback without name\")\r\n    public void userCanNotSendFeedbackWithoutName() throws JsonProcessingException {\r\n        String newUserEmail = \"wWw1s1trieng12324@gmail.com\";\r\n        String password = \"Manowar33246\";\r\n\r\n        String name = \"\";\r\n        String email = \"wWw1s1trieng12324@gmail.com\";\r\n        String content = \"Sdsdf sdfg dfgh dfgh f sdfgh\";\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(newUserEmail, password, 200);\r\n\r\n        feedbackReq = new FeedbackReq();\r\n        feedbackReq.setName(name);\r\n        feedbackReq.setEmail(email);\r\n        feedbackReq.setContent(content);\r\n\r\n        contactUsApi = new ContactUsApi(token);\r\n        contactUsApi.setDataToTheFeedback(feedbackReq, 400);\r\n    }\r\n\r\n    @Feature(value = \"User can not send feedback\")\r\n    @Story(value = \"User can not send feedback without email\")\r\n    @Description(value = \"User can not send feedback without email\")\r\n    @Severity(SeverityLevel.BLOCKER)\r\n    @Test(description = \"User can not send feedback without email\")\r\n    public void userCanNotSendFeedbackWithoutEmail() throws JsonProcessingException {\r\n        String newUserEmail = \"wWw1s1trieng12324@gmail.com\";\r\n        String password = \"Manowar33246\";\r\n\r\n        String name = \"Nata\";\r\n        String email = \"\";\r\n        String content = \"Sdsdf sdfg dfgh dfgh f sdfgh\";\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(newUserEmail, password, 200);\r\n\r\n        feedbackReq = new FeedbackReq();\r\n        feedbackReq.setName(name);\r\n        feedbackReq.setEmail(email);\r\n        feedbackReq.setContent(content);\r\n\r\n        contactUsApi = new ContactUsApi(token);\r\n        contactUsApi.setDataToTheFeedback(feedbackReq, 400);\r\n    }\r\n\r\n    @Feature(value = \"User can not send feedback\")\r\n    @Story(value = \"User can not send feedback without message\")\r\n    @Description(value = \"User can not send feedback without message\")\r\n    @Severity(SeverityLevel.BLOCKER)\r\n    @Test(description = \"User can not send feedback without message\")\r\n    public void userCanNotSendFeedbackWithoutMessage() throws JsonProcessingException {\r\n        String newUserEmail = \"wWw1s1trieng12324@gmail.com\";\r\n        String password = \"Manowar33246\";\r\n\r\n        String name = \"Nata\";\r\n        String email = \"wWw1s1trieng12324@gmail.com\";\r\n        String content = \"\";\r\n\r\n        userApi = new UserApi();\r\n        String token = userApi.login(newUserEmail, password, 200);\r\n\r\n        feedbackReq = new FeedbackReq();\r\n        feedbackReq.setName(name);\r\n        feedbackReq.setEmail(email);\r\n        feedbackReq.setContent(content);\r\n\r\n        contactUsApi = new ContactUsApi(token);\r\n        contactUsApi.setDataToTheFeedback(feedbackReq, 400);\r\n    }\r\n\r\n}\r\n\r\n
===================================================================
diff --git a/src/test/java/integration/tests/contactUs/ContactUsApiTest.java b/src/test/java/integration/tests/contactUs/ContactUsApiTest.java
--- a/src/test/java/integration/tests/contactUs/ContactUsApiTest.java	
+++ b/src/test/java/integration/tests/contactUs/ContactUsApiTest.java	
@@ -7,15 +7,12 @@
 import integration.pages.user.UserApi;
 import integration.schemas.FeedbackReq;
 import io.qameta.allure.*;
-import io.restassured.RestAssured;
-import io.restassured.http.ContentType;
-import io.restassured.response.Response;
+
 import org.testng.Assert;
 import org.testng.annotations.Test;
-import util.UserInfoDto;
+
 
-import static io.restassured.RestAssured.baseURI;
-import static org.testng.AssertJUnit.assertNotNull;
+
 
 public class ContactUsApiTest extends ApiBase {
     UserApi userApi;
